package com.wms.abstractclient.module.modules.exploit;

import com.wms.abstractclient.event.PacketReceiveEvent;
import com.wms.abstractclient.module.Module;
import net.minecraft.init.SoundEvents;
import net.minecraft.network.play.server.SPacketEffect;
import net.minecraft.network.play.server.SPacketSoundEffect;
import net.minecraft.util.SoundCategory;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.lwjgl.input.Keyboard;

public class GlobalSoundLogger extends Module {

    String message;

    public GlobalSoundLogger() {
        super("GlobalSoundLogger", Category.EXPLOIT, Keyboard.KEY_NONE);
    }

    @SubscribeEvent
    public void onPacket(PacketReceiveEvent event){
         if(event.getPacket() instanceof SPacketSoundEffect){
             SPacketSoundEffect packet = (SPacketSoundEffect)event.getPacket();
             if (packet.getCategory() == SoundCategory.WEATHER && packet.getSound() == SoundEvents.ENTITY_LIGHTNING_THUNDER) {
                        sendMsg("Lightning spawned at X: " + packet.getX()  + " Y: " + packet.getY()  + " Z: " + packet.getZ());
             }
         }
        if (event.getPacket() instanceof SPacketEffect) {
            SPacketEffect packet2 = (SPacketEffect) event.getPacket();
            if (packet2.getSoundType() == 1038) {
                message = "End Portal opened at X: " + packet2.getSoundPos().getX() + " Y: " + packet2.getSoundPos().getY() + " Z: " + packet2.getSoundPos().getZ();
                sendMsg(message);
            }
            if (packet2.getSoundType() == 1023) {
                message = "Wither spawned at X: " + packet2.getSoundPos().getX() + " Y: " + packet2.getSoundPos().getY() + " Z: " + packet2.getSoundPos().getZ();
                sendMsg(message);
            }
            if (packet2.getSoundType() == 1028) {
                message = "Dragon killed at X: " + packet2.getSoundPos().getX() + " Y: " + packet2.getSoundPos().getY() + " Z: " + packet2.getSoundPos().getZ();
                sendMsg(message);
            }
        }
    }
}
