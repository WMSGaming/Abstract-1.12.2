package com.wms.abstractclient.module.modules.exploit;

import com.wms.abstractclient.event.PacketReceiveEvent;
import com.wms.abstractclient.event.PacketSendEvent;
import com.wms.abstractclient.module.Module;
import com.wms.abstractclient.setting.Setting;
import net.minecraft.entity.Entity;
import net.minecraft.init.Blocks;
import net.minecraft.network.login.client.CPacketLoginStart;
import net.minecraft.network.login.server.SPacketDisconnect;
import net.minecraft.network.play.client.CPacketClientStatus;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.server.SPacketPlayerPosLook;
import net.minecraft.util.math.BlockPos;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.lwjgl.input.Keyboard;

import java.util.Arrays;

public class BurrowBypass extends Module {

    Setting mode = new Setting(this,"Mode", Arrays.asList("Both","Position","NoRotate","SCancel"));

    public BurrowBypass() {
        super("BurrowBypass", Category.EXPLOIT, Keyboard.KEY_NONE);
        addSetting(mode);
    }

    @Override
    public void onTick() {

        if(nullcheck()){return;}



        if(mode.getEnumValue().equalsIgnoreCase("Both") || mode.getEnumValue().equalsIgnoreCase("Position")) {
            if(isBurrowed(mc.player)) {
                mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY - 0.001123223, mc.player.posZ, true));
                mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 0.001123223, mc.player.posZ, false));
            }
        }
    }

    @SubscribeEvent
    public void onPacket(PacketSendEvent event){
        if(nullcheck()){return;}
        if(mode.getEnumValue().equalsIgnoreCase("Both") || mode.getEnumValue().equalsIgnoreCase("NoRotate")  && event.getPacket() instanceof CPacketPlayer.PositionRotation || event.getPacket() instanceof CPacketPlayer.Rotation){
            if(isBurrowed(mc.player)) {
                event.setCanceled(true);
            }
        }
    }
    @SubscribeEvent
    public void onPacket(PacketReceiveEvent event){
        if(nullcheck()){return;}
        if(mode.getEnumValue().equalsIgnoreCase("SCancel") && event.getPacket() instanceof SPacketPlayerPosLook){
            if(isBurrowed(mc.player)) {
                event.setCanceled(true);
            }
        }

    }
    public boolean isBurrowed(Entity entity){
        BlockPos entityPos = new BlockPos((entity.posX), entity.posY, (entity.posZ));

        if (mc.world.getBlockState(entityPos).getBlock() == Blocks.OBSIDIAN || mc.world.getBlockState(entityPos).getBlock() == Blocks.ENDER_CHEST || mc.world.getBlockState(entityPos).getBlock() == Blocks.SKULL) {
            return true;
        }

        return false;
    }
}
